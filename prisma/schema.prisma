// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)

  //*  Relation Fields
  profile     Profile?
  trip        Trip[]
  friends     Friend[]
  savedPlaces Place[]
  reviews     Review[]

  @@index([email])
}

model Profile {
  id        String    @id @default(uuid())
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)

  //*  Relation Fields
  user   User?  @relation(fields: [userId], references: [id])
  userId String @unique
}

model Friend {
  id        String    @id @default(uuid())
  image     String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)

  //*  Relation Fields
  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([name])
}

model Trip {
  id   String  @id @default(uuid())
  slug String?

  startDate   DateTime  @default(now())
  endDate     DateTime
  duration    Int
  preferences String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  isActive    Boolean?  @default(false)

  //*  Relation Fields
  user        User?   @relation(fields: [userId], references: [id])
  userId      String?
  destination Place[]

  @@index([preferences])
}

model Preferences {
  id        String    @id @default(uuid())
  data      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)
}

model Place {
  id   String @id @default(uuid())
  name String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)

  //*  Relation Fields
  location Location[]
  trip     Trip?      @relation(fields: [tripId], references: [id])
  tripId   String?
  user     User?      @relation(fields: [userId], references: [id])
  userId   String?

  @@index([name])
}

model Location {
  id        String   @id @default(uuid())
  name      String
  ratings   Float
  latitude  Float
  longitude Float
  website   String?
  openTime  DateTime
  closeTime DateTime
  isOpen    Boolean  @default(false)
  createdAt DateTime @default(now())

  //*  Relation Fields
  image     Image[]
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)
  place     Place?    @relation(fields: [placeId], references: [id])
  placeId   String?
  reviews   Review[]

  @@index([name])
}

model Review {
  id            String    @id @default(uuid())
  reviewerImage String?
  ratings       Float?
  comment       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  isActive      Boolean?  @default(false)

  //*  Relation Fields
  images     Image[]
  location   Location? @relation(fields: [locationId], references: [id])
  locationId String?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  altText   String?
  caption   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //*  Relation Fields
  review     Review?   @relation(fields: [reviewId], references: [id])
  reviewId   String?
  location   Location? @relation(fields: [locationId], references: [id])
  locationId String?
}
